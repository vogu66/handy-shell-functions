#
# ~/.functions
#

# kill any process by name
kil()
{
	id=$(pgrep $1);
	kill -15 $id
}

# detach stuff from the terminal and remove all shell output,
# allows to close the terminal without closing the other process (window) you just launched.
detach ()
{
	$@ < /dev/null &>/dev/null &
	disown '$@ < /dev/null &> /dev/null'
}

# git with the right user
# (see https://gist.github.com/jexchan/2351996/)
# 
# $1 = c (clone) or a (add origin) or s (set user)
# $2 = ssh link or just name of repo
#
git66 ()
{	
	gitUser $1 $2 vogu.github.com vogu66 24728720+vogu66@users.noreply.github.com
}
gitUser ()
# $1-> action
# $2-> name or full ssh
# $3-> server from config
# $4-> user
# $5-> mail
# $6-> user for ssh
{
	if [ "$6" != "" ]
	then
		sshU="git"
	else
		sshU=$6
	fi
	
	name=$4
	if [ $1 != "s" ]
	then
		echo "user.name :"
		echo $name
	fi
	mail=$5
	if [ $1 != "s" ]
	then
		echo "user.email:"
		echo $mail
	fi
		
	address=$2
	dir="./"
	if [ "${address:3:1}" = "@" ]
	then
		fullssh="$sshU@$3:${address:16:${#address}}"
		dir="$dir${${address:16:${#address}}%".git"}"
	else 
		if [ "$address" != "" ]
		then
			fullssh="git@$3:$name/$address.git"
			dir="$dir$address"
		else
			fullssh=""
		fi
	fi
	
	if [ $1 != "s" ]
	then
		echo "dir :"
		echo $dir
		echo "address : "
		echo $fullssh
	fi
	
	if [ $1 = "c" ]
	then
		git clone $fullssh
		cd $dir
	fi
	
	git config user.name $name
	git config user.email $mail
	
	if [ $1 = "a" ]
	then
		git remote add origin $fullssh
		git push --set-upstream origin master
	fi
}


# From the Manjaro default bash_profile :
# ex - archive extractor
# usage: ex <file>
ex ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1     ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

# show aliases
aliases ()
{
	cat ~/.alias
}

# show functions
functions ()
{
	cat ~/.functions
}
